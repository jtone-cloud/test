{"remainingRequest":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\前后端分离项目练习\\02springbootlqyk36m6\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\前后端分离项目练习\\02springbootlqyk36m6\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前后端分离项目练习\\02springbootlqyk36m6\\front\\front\\src\\pages\\fangwusheji\\list.vue?vue&type=template&id=4ec9ac54&scoped=true","dependencies":[{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\front\\front\\src\\pages\\fangwusheji\\list.vue","mtime":1739177815254},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739343495126},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1739343500880},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739343495126},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1739343495816}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}