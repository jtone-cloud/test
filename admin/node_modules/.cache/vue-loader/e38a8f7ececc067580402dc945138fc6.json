{"remainingRequest":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前后端分离项目练习\\02springbootlqyk36m6\\admin\\src\\views\\modules\\yuyuexinxi\\list.vue?vue&type=template&id=9ce68e0c&scoped=true","dependencies":[{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\admin\\src\\views\\modules\\yuyuexinxi\\list.vue","mtime":1739329538068},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739328752521},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739328752521},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1739328754315},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1739328755913},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739328752521},{"path":"E:\\前后端分离项目练习\\02springbootlqyk36m6\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1739328754997}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}